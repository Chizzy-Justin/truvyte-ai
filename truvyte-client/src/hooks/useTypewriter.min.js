import{useState,useEffect,useRef}from"react";export default function useTypewriter(texts,{typingSpeed:typingSpeed=100,deletingSpeed:deletingSpeed=50,pause:pause=2e3,cursorBlinkSpeed:cursorBlinkSpeed=500}={}){const[display,setDisplay]=useState(texts[0]||""),[textIndex,setTextIndex]=useState(0),[charIndex,setCharIndex]=useState(texts[0]?.length||0),[deleting,setDeleting]=useState(!0),[blink,setBlink]=useState(!0),initialMount=useRef(!0);return useEffect((()=>{if(initialMount.current){initialMount.current=!1;const timer=setTimeout((()=>{setDeleting(!0)}),pause);return()=>clearTimeout(timer)}}),[pause]),useEffect((()=>{const currentText=texts[textIndex];let timer;return deleting?charIndex>=0?timer=setTimeout((()=>{setDisplay(currentText.slice(0,charIndex)),setCharIndex(charIndex-1)}),deletingSpeed):(setDeleting(!1),setTextIndex((prev=>(prev+1)%texts.length)),setCharIndex(0)):timer=charIndex<=currentText.length?setTimeout((()=>{setDisplay(currentText.slice(0,charIndex)),setCharIndex(charIndex+1)}),typingSpeed):setTimeout((()=>{setDeleting(!0)}),pause),()=>clearTimeout(timer)}),[charIndex,deleting,pause,texts,textIndex,typingSpeed,deletingSpeed]),useEffect((()=>{const blinkTimer=setInterval((()=>{setBlink((prev=>!prev))}),cursorBlinkSpeed);return()=>clearInterval(blinkTimer)}),[cursorBlinkSpeed]),{text:display,showCursor:blink}}